#!/bin/sh

# Determine root partition (assumes "root" is the first kernel option)
rootpart=$(cat /proc/cmdline|sed -e 's,^root=/dev/mmcblk0p\([23]\) .*,\1,g')
rm -f /run/media/persistent/swupdate_flags/update_status

if [ ! -d "/run/media/persistent/swupdate_flags" ]; then
  mkdir /run/media/persistent/swupdate_flags
fi

if [ -e "/run/media/persistent/swupdate_flags/update_performed" ]; then
  prevpart=`cat /run/media/persistent/swupdate_flags/prevpart`

  if [ "$rootpart" != "$prevpart" ]; then
    update_status="2"
    hawkbit_update_status="-c 2"
    bg_setenv -c
  else
    update_status="3"
    hawkbit_update_status="-c 3"
  fi
  rm -f /run/media/persistent/swupdate_flags/update_performed
else
  update_status=""
  hawkbit_update_status=""
fi

echo -n "$rootpart" > /run/media/persistent/swupdate_flags/prevpart
echo -n "$update_status" > /run/media/persistent//swupdate_flags/update_status

case "${rootpart}" in
   2) PLATFORM_ID=platform1;;
   3) PLATFORM_ID=platform0;;
esac

tries=0
while :
do
   # Extract the MAC address of the on-board Ethernet controller
   MACHINE_ID=`ip address|grep link/ether|awk '{ print $2; }'`

   # Did we get our MAC address? Stop polling if we did
   [ "${MACHINE_ID}" != "00:00:00:00:00:00" ] && break

   # Should we give up?
   tries=$((${tries} + 1))
   [ ${tries} -ge 10 ] && exit 1

   # Continue trying, pause for a second
   sleep 1
done

cat >/tmp/swupdate.env <<EOF
MACHINE_ID=${MACHINE_ID}
PLATFORM_ID=${PLATFORM_ID}
UPDATE_STATUS=${hawkbit_update_status}
EOF
