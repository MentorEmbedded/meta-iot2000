From 01fd4ee1dddb0f5891e211efd132a4815c29fae1 Mon Sep 17 00:00:00 2001
From: Cedric Hombourger <Cedric_Hombourger@mentor.com>
Date: Tue, 20 Jun 2017 22:09:07 +0200
Subject: [PATCH] Provide a (dummy) file-backed bootloader interface

Signed-off-by: Cedric Hombourger <Cedric_Hombourger@mentor.com>
---
 bootloader/Config.in         |  13 ++++++
 bootloader/Makefile          |   1 +
 bootloader/file.c            | 102 +++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 116 insertions(+)
 create mode 100644 bootloader/file.c

Index: git/bootloader/Config.in
===================================================================
--- git.orig/bootloader/Config.in
+++ git/bootloader/Config.in
@@ -19,6 +19,19 @@ config BOOTLOADER_NONE
 	help
 	  No interface to the bootloader
 
+config BOOTLOADER_FILE
+	bool "File"
+	help
+	  A file-backed boot settings interface
+
+config BOOTLOADER_FILE_PATH
+	string "Location of the boot settings file"
+        depends on BOOTLOADER_FILE
+	default "/etc/swu-boot.conf"
+	help
+          This is the file where boot settings will be
+          read from / written to
+
 config BOOTLOADER_GRUB
 	bool "GRUB Bootloader"
 	help
Index: git/bootloader/file.c
===================================================================
--- /dev/null
+++ git/bootloader/file.c
@@ -0,0 +1,105 @@
+/*
+ * (C) Copyright 2017
+ * Stefano Babic, DENX Software Engineering, sbabic@denx.de.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <errno.h>
+#include <unistd.h>
+#include <libconfig.h>
+
+#include "bootloader.h"
+#include "util.h"
+
+int bootloader_env_set(const char *name, const char *value)
+{
+	config_t cfg;
+	config_setting_t *root, *node;
+	int result = CONFIG_FALSE;
+
+	config_init(&cfg);
+	(void) config_read_file(&cfg, CONFIG_BOOTLOADER_FILE_PATH);
+	node = config_lookup(&cfg, name);
+
+	/* Check if setting already exists */
+	if (node) {
+		result = config_setting_set_string(node, value);
+	}
+	else {
+		/* Otherwise add... */
+		root = config_root_setting(&cfg);
+		node = config_setting_add(root, name, CONFIG_TYPE_STRING);
+		if (node) {
+			result = config_setting_set_string(node, value);
+		}
+		else result = CONFIG_FALSE;
+	}
+
+	/* Write configuration */
+	if (result == CONFIG_TRUE) {
+		result = config_write_file(&cfg, CONFIG_BOOTLOADER_FILE_PATH);
+	}
+
+	config_destroy(&cfg);
+	result = (result == CONFIG_TRUE) ? 0 : -1;
+	return result;
+}
+
+int bootloader_env_unset(const char *name)
+{
+	config_t cfg;
+	config_setting_t *root;
+	int result = CONFIG_FALSE;
+
+	config_init(&cfg);
+	(void) config_read_file(&cfg, CONFIG_BOOTLOADER_FILE_PATH);
+
+	/* Try to remove the requested setting */
+	root = config_root_setting(&cfg);
+	result = config_setting_remove(root, name);
+
+	/* Write configuration */
+	if (result == CONFIG_TRUE) {
+		result = config_write_file(&cfg, CONFIG_BOOTLOADER_FILE_PATH);
+	}
+	else result = CONFIG_TRUE;
+
+	config_destroy(&cfg);
+
+	result = (result == CONFIG_TRUE) ? 0 : -1;
+	return result;
+}
+
+char *bootloader_env_get(const char *name)
+{
+	config_t cfg;
+	const char *value = NULL;
+
+	config_init(&cfg);
+	if (config_read_file(&cfg, CONFIG_BOOTLOADER_FILE_PATH) == CONFIG_TRUE) {
+		if (config_lookup_string(&cfg, name, &value) == CONFIG_TRUE) {
+			value = strdup(value);
+		}
+	}
+	config_destroy(&cfg);
+	return (char *)value;
+}
+
+int bootloader_apply_list(const char __attribute__ ((__unused__)) *filename)
+{
+	return 0;
+}
Index: git/bootloader/Makefile
===================================================================
--- git.orig/bootloader/Makefile
+++ git/bootloader/Makefile
@@ -1,3 +1,4 @@
 lib-$(CONFIG_UBOOT)		+= uboot.o
 lib-$(CONFIG_BOOTLOADER_NONE)	+= none.o
 lib-$(CONFIG_BOOTLOADER_GRUB)	+= grub.o
+lib-$(CONFIG_BOOTLOADER_FILE)	+= file.o
